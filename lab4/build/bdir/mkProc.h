/*
 * Generated by Bluespec Compiler, version 2014.07.A (build 34078, 2014-07-30)
 * 
 * On Tue May  2 15:54:47 KST 2017
 * 
 */

/* Generation options: */
#ifndef __mkProc_h__
#define __mkProc_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"
#include "mkCop.h"
#include "mkDMemory.h"
#include "mkIMemory.h"
#include "mkRFile.h"


/* Class declaration for the mkProc module */
class MOD_mkProc : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt8> INST_condFlag;
  MOD_mkCop INST_cop;
  MOD_mkDMemory INST_dMem;
  MOD_Reg<tUInt64> INST_f2e;
  MOD_mkIMemory INST_iMem;
  MOD_Reg<tUInt32> INST_pc;
  MOD_mkRFile INST_rf;
  MOD_Reg<tUInt8> INST_stage;
  MOD_Reg<tUInt8> INST_stat;
  MOD_Reg<tUInt8> INST_statRedirect_data_0_dummy2_0;
  MOD_Reg<tUInt8> INST_statRedirect_data_0_dummy2_1;
  MOD_Wire<tUInt8> INST_statRedirect_data_0_dummy_0_0;
  MOD_Wire<tUInt8> INST_statRedirect_data_0_dummy_0_1;
  MOD_Wire<tUInt8> INST_statRedirect_data_0_dummy_1_0;
  MOD_Wire<tUInt8> INST_statRedirect_data_0_dummy_1_1;
  MOD_Wire<tUInt8> INST_statRedirect_data_0_lat_0;
  MOD_Wire<tUInt8> INST_statRedirect_data_0_lat_1;
  MOD_Reg<tUInt8> INST_statRedirect_data_0_rl;
  MOD_Reg<tUInt8> INST_statRedirect_deqP_dummy2_0;
  MOD_Reg<tUInt8> INST_statRedirect_deqP_dummy2_1;
  MOD_Wire<tUInt8> INST_statRedirect_deqP_dummy_0_0;
  MOD_Wire<tUInt8> INST_statRedirect_deqP_dummy_0_1;
  MOD_Wire<tUInt8> INST_statRedirect_deqP_dummy_1_0;
  MOD_Wire<tUInt8> INST_statRedirect_deqP_dummy_1_1;
  MOD_Wire<tUInt8> INST_statRedirect_deqP_lat_0;
  MOD_Wire<tUInt8> INST_statRedirect_deqP_lat_1;
  MOD_Reg<tUInt8> INST_statRedirect_deqP_rl;
  MOD_Reg<tUInt8> INST_statRedirect_enqP_dummy2_0;
  MOD_Reg<tUInt8> INST_statRedirect_enqP_dummy2_1;
  MOD_Wire<tUInt8> INST_statRedirect_enqP_dummy_0_0;
  MOD_Wire<tUInt8> INST_statRedirect_enqP_dummy_0_1;
  MOD_Wire<tUInt8> INST_statRedirect_enqP_dummy_1_0;
  MOD_Wire<tUInt8> INST_statRedirect_enqP_dummy_1_1;
  MOD_Wire<tUInt8> INST_statRedirect_enqP_lat_0;
  MOD_Wire<tUInt8> INST_statRedirect_enqP_lat_1;
  MOD_Reg<tUInt8> INST_statRedirect_enqP_rl;
 
 /* Constructor */
 public:
  MOD_mkProc(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
  tUWide PORT_cpuToHost;
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_cop_started____d22;
  tUInt8 DEF_IF_f2e_62_BITS_47_TO_44_63_EQ_0b0_64_OR_f2e_62_ETC___d198;
  tUInt8 DEF_iCode__h5719;
  tUInt8 DEF_ifun__h5720;
  tUInt64 DEF_f2e__h7993;
  tUInt8 DEF_condFlag___d212;
  tUInt8 DEF_upd__h9382;
  tUInt8 DEF_upd__h11252;
  tUInt8 DEF_upd__h11310;
  tUInt8 DEF_statRedirect_deqP_dummy2_1__h9502;
  tUInt8 DEF_statRedirect_deqP_dummy2_0__h9489;
  tUInt8 DEF_statRedirect_enqP_dummy2_1__h11278;
  tUInt8 DEF_statRedirect_enqP_dummy2_0__h9308;
  tUInt8 DEF_rA__h5721;
  tUInt8 DEF_condFlag_12_BIT_2___d214;
  tUInt8 DEF_condFlag_12_BIT_1___d219;
  tUInt8 DEF_condFlag_12_BIT_0___d213;
  tUInt8 DEF_f2e_62_BITS_47_TO_44_63_EQ_0b0_64_OR_f2e_62_BI_ETC___d166;
  tUInt8 DEF_f2e_62_BITS_47_TO_44_63_EQ_0b110___d168;
  tUInt8 DEF_f2e_62_BITS_47_TO_44_63_EQ_0b10___d172;
  tUInt8 DEF_f2e_62_BITS_47_TO_44_63_EQ_0b111___d173;
  tUInt8 DEF_f2e_62_BITS_47_TO_44_63_EQ_0b1100___d184;
  tUInt8 DEF_f2e_62_BITS_47_TO_44_63_EQ_0b1001___d180;
  tUInt8 DEF_f2e_62_BITS_47_TO_44_63_EQ_0b1000___d179;
  tUInt8 DEF_IF_f2e_62_BITS_47_TO_44_63_EQ_0b0_64_OR_f2e_62_ETC___d251;
  tUInt8 DEF_f2e_62_BITS_47_TO_44_63_EQ_0b0_64_OR_f2e_62_BI_ETC___d258;
  tUInt8 DEF_IF_f2e_62_BITS_47_TO_44_63_EQ_0b0_64_OR_f2e_62_ETC___d233;
  tUInt8 DEF_IF_f2e_62_BITS_47_TO_44_63_EQ_0b0_64_THEN_11_E_ETC___d167;
  tUInt8 DEF_f2e_62_BITS_47_TO_44_63_EQ_0b11___d169;
  tUInt8 DEF_f2e_62_BITS_47_TO_44_63_EQ_0b100___d170;
  tUInt8 DEF_f2e_62_BITS_47_TO_44_63_EQ_0b101___d171;
  tUInt8 DEF_f2e_62_BITS_47_TO_44_63_EQ_0b1011___d174;
  tUInt8 DEF_f2e_62_BITS_47_TO_44_63_EQ_0b1010___d178;
  tUInt8 DEF_IF_f2e_62_BITS_47_TO_44_63_EQ_0b1000_79_THEN_9_ETC___d183;
  tUInt8 DEF_f2e_62_BITS_43_TO_40_85_EQ_0b0___d186;
  tUInt8 DEF_f2e_62_BITS_47_TO_44_63_EQ_0b0___d164;
  tUInt8 DEF_y__h9535;
  tUInt8 DEF_x__h9534;
  tUInt8 DEF_IF_statRedirect_enqP_lat_0_whas__0_THEN_statRe_ETC___d13;
  tUInt8 DEF_IF_f2e_62_BITS_43_TO_40_85_EQ_0b11_11_THEN_con_ETC___d231;
  tUInt8 DEF_condFlag_12_BIT_0_13_OR_NOT_condFlag_12_BIT_2__ETC___d216;
  tUInt8 DEF_NOT_condFlag_12_BIT_2_14___d215;
  tUInt8 DEF_NOT_condFlag_12_BIT_1_19_20_OR_condFlag_12_BIT_ETC___d221;
  tUInt8 DEF_condFlag_12_BIT_1_19_OR_condFlag_12_BIT_2_14___d225;
  tUInt8 DEF_NOT_f2e_62_BITS_47_TO_44_63_EQ_0b1100_84___d240;
  tUInt8 DEF_IF_f2e_62_BITS_47_TO_44_63_EQ_0b0_64_OR_f2e_62_ETC___d199;
  tUInt8 DEF_f2e_62_BITS_47_TO_44_63_EQ_0b1___d165;
  tUInt8 DEF_NOT_f2e_62_BITS_47_TO_44_63_EQ_0b1000_79___d237;
  tUInt8 DEF_NOT_condFlag_12_BIT_1_19___d220;
  tUInt8 DEF_NOT_f2e_62_BITS_47_TO_44_63_EQ_0b11_69_01_AND__ETC___d205;
  tUInt8 DEF_NOT_f2e_62_BITS_47_TO_44_63_EQ_0b11_69___d201;
  tUInt8 DEF_NOT_f2e_62_BITS_47_TO_44_63_EQ_0b10_72___d234;
  tUInt8 DEF_NOT_f2e_62_BITS_47_TO_44_63_EQ_0b110_68___d200;
  tUInt8 DEF_NOT_f2e_62_BITS_47_TO_44_63_EQ_0b1011_74___d235;
  tUInt8 DEF_NOT_f2e_62_BITS_47_TO_44_63_EQ_0b1010_78___d236;
  tUInt8 DEF_NOT_f2e_62_BITS_47_TO_44_63_EQ_0b1000_79_37_AN_ETC___d239;
  tUInt8 DEF_NOT_f2e_62_BITS_47_TO_44_63_EQ_0b1001_80___d238;
  tUInt8 DEF_NOT_f2e_62_BITS_43_TO_40_85_EQ_0b0_86___d208;
  tUInt8 DEF_NOT_f2e_62_BITS_47_TO_44_63_EQ_0b101_71___d203;
  tUInt8 DEF_NOT_f2e_62_BITS_47_TO_44_63_EQ_0b100_70___d202;
 
 /* Local definitions */
 private:
  tUInt32 DEF_pc__h5717;
  tUInt8 DEF_statRedirect_data_0_rl__h1679;
  tUInt8 DEF_IF_statRedirect_data_0_lat_0_whas_THEN_statRed_ETC___d6;
  tUWide DEF_NOT_IF_f2e_62_BITS_47_TO_44_63_EQ_0b0_64_OR_f2_ETC___d500;
 
 /* Rules */
 public:
  void RL_statRedirect_data_0_canon();
  void RL_statRedirect_enqP_canon();
  void RL_statRedirect_deqP_canon();
  void RL_doFetch();
  void RL_doRest();
  void RL_upd_Stat();
  void RL_statHLT();
  void RL_statINS();
 
 /* Methods */
 public:
  tUWide METH_cpuToHost();
  tUInt8 METH_RDY_cpuToHost();
  void METH_hostToCpu(tUInt32 ARG_hostToCpu_startpc);
  tUInt8 METH_RDY_hostToCpu();
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkProc &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkProc &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkProc &backing);
  void vcd_submodules(tVCDDumpType dt, unsigned int levels, MOD_mkProc &backing);
};

#endif /* ifndef __mkProc_h__ */
