/*
 * Generated by Bluespec Compiler, version 2014.07.A (build 34078, 2014-07-30)
 * 
 * On Tue Mar 28 21:02:07 KST 2017
 * 
 */

/* Generation options: */
#ifndef __mkTbRightArithmeticPipelined_h__
#define __mkTbRightArithmeticPipelined_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkTbRightArithmeticPipelined module */
class MOD_mkTbRightArithmeticPipelined : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Fifo<tUInt64> INST_bsrap_bsrp_inFifo;
  MOD_Fifo<tUInt32> INST_bsrap_bsrp_outFifo;
  MOD_Reg<tUInt64> INST_bsrap_bsrp_reg16;
  MOD_Reg<tUInt64> INST_bsrap_bsrp_reg2;
  MOD_Reg<tUInt64> INST_bsrap_bsrp_reg4;
  MOD_Reg<tUInt64> INST_bsrap_bsrp_reg8;
  MOD_Reg<tUInt8> INST_bsrap_bsrp_shamt16;
  MOD_Reg<tUInt8> INST_bsrap_bsrp_shamt2;
  MOD_Reg<tUInt8> INST_bsrap_bsrp_shamt4;
  MOD_Reg<tUInt8> INST_bsrap_bsrp_shamt8;
  MOD_Reg<tUInt8> INST_bsrap_bsrp_val16;
  MOD_Reg<tUInt8> INST_bsrap_bsrp_val2;
  MOD_Reg<tUInt8> INST_bsrap_bsrp_val4;
  MOD_Reg<tUInt8> INST_bsrap_bsrp_val8;
  MOD_Reg<tUInt32> INST_input_cycle;
  MOD_Reg<tUInt32> INST_output_cycle;
  MOD_Reg<tUInt8> INST_randomShift_init;
  MOD_Reg<tUInt8> INST_randomVal_init;
  MOD_Fifo<tUInt64> INST_valFifo;
 
 /* Constructor */
 public:
  MOD_mkTbRightArithmeticPipelined(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt64 DEF_bsrap_bsrp_reg16___d5;
  tUInt32 DEF_x__h16796;
  tUInt32 DEF_x__h16497;
  tUInt8 DEF_bsrap_bsrp_inFifo_notEmpty____d1;
  tUInt8 DEF_bsrap_bsrp_reg16_BIT_32___d6;
  tUInt8 DEF_output_cycle_039_EQ_128___d1040;
 
 /* Local definitions */
 private:
  tUInt32 DEF_x__h16231;
  tUInt32 DEF_TASK_getRandom___d1032;
 
 /* Rules */
 public:
  void RL_bsrap_bsrp_shift();
  void RL_randomVal_initialize();
  void RL_randomShift_initialize();
  void RL_test_request();
  void RL_test_response();
 
 /* Methods */
 public:
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkTbRightArithmeticPipelined &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkTbRightArithmeticPipelined &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkTbRightArithmeticPipelined &backing);
};

#endif /* ifndef __mkTbRightArithmeticPipelined_h__ */
